summary: A generic and open source machine & userspace emulator and virtualizer
web-url: https://www.qemu.org/
git-url: https://git.qemu.org/git/qemu.git
src-url: https://download.qemu.org/qemu-8.2.0.tar.xz
src-sha: bf00d2fa12010df8b0ade93371def58e632cb32a6bfdc5f5a0ff8e6a1fb1bf32
license: GPL-2.0-only
dep-pkg: capstone libslirp libssh libusb libpng libjpeg-turbo pixman gnutls lzo nettle snappy dtc vde libzstd libcap-ng xattr
dep-upp: bzip2 flex bison
ppflags: -UNDEBUG
bsystem: gmake meson
dopatch: |
    if [ "$LINK_TYPE" = static-full ] || [ "$LINK_TYPE" = static-most ] ; then
        sed_in_place 's|meson setup --prefix|meson setup --prefer-static --prefix|' configure
        sed_in_place "s|cc.find_library('vdeplug'|cc.find_library('vdeplug', static : true, dirs : ['$vde_LIBRARY_DIR']|" meson.build
        sed_in_place "s|cc.find_library('cap-ng'|cc.find_library('cap-ng', static : true, dirs : ['$libcap_ng_LIBRARY_DIR']|" meson.build
        sed_in_place "s|cc.find_library('attr'|cc.find_library('attr', static : true, dirs : ['$xattr_LIBRARY_DIR']|" meson.build
        sed_in_place "s|cc.find_library('fdt'|cc.find_library('fdt', static : true, dirs : ['$dtc_LIBRARY_DIR']|" meson.build
    fi

install: |
    #export CPPFLAGS="$(printf '%s\n' "$CPPFLAGS" | sed 's|-DNDEBUG||')"
    ../configure \
        --prefix="$PACKAGE_INSTALL_DIR" \
        --cc="$CC" \
        --host-cc="$CC_FOR_BUILD" \
        --extra-cflags="$CFLAGS $CPPFLAGS -DNCURSES_WIDECHAR=1" \
        --extra-ldflags="$LDFLAGS" \
        --disable-bsd-user \
        --disable-guest-agent \
        --enable-capstone \
        --enable-curses \
        --enable-libssh \
        --enable-slirp \
        --enable-fdt=system \
        --enable-vde \
        --enable-virtfs \
        --enable-zstd \
        --disable-sdl \
        --disable-gtk
    gmakew install V=1
