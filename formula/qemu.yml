summary: A generic and open source machine & userspace emulator and virtualizer
web-url: https://www.qemu.org/
git-url: https://git.qemu.org/git/qemu.git
src-url: https://download.qemu.org/qemu-9.0.0.tar.xz
src-sha: 32708ac66c30d8c892633ea968c771c1c76d597d70ddead21a0d22ccf386da69
license: GPL-2.0-only
dep-pkg: ncurses capstone libfdt libusb libslirp libssh libpng libjpeg-turbo libpixman libsnappy libzstd liblzo libgnutls libnettle vde libcap-ng xattr
dep-upp: bzip2 gm4 flex bison
bsystem: gmake meson

ppflags: -UNDEBUG
ldflags: -lstdc++

dopatch: |
    sedInPlace 's|meson setup |meson setup --prefer-static |' configure
    sedInPlace "s|cc.find_library('vdeplug'|cc.find_library('vdeplug', static : true, dirs : ['$vde_LIBRARY_DIR']|" meson.build
    sedInPlace "s|cc.find_library('cap-ng'|cc.find_library('cap-ng', static : true, dirs : ['$libcap_ng_LIBRARY_DIR']|" meson.build
    sedInPlace "s|cc.find_library('attr'|cc.find_library('attr', static : true, dirs : ['$xattr_LIBRARY_DIR']|" meson.build
    sedInPlace "s|cc.find_library('fdt'|cc.find_library('fdt', static : true, dirs : ['$libfdt_LIBRARY_DIR']|" meson.build
    sedInPlace "/iconv = /c iconv = cc.find_library('iconv', static : true, dirs: ['$libiconv_LIBRARY_DIR'])" meson.build

prepare: |
    unset CONFIGURE_EXTRA_ARGS

    if [ "$TARGET_PLATFORM_NAME" = macos ] ; then
        CONFIGURE_EXTRA_ARGS='--enable-cocoa'
    fi

install: |
    ./configure \
        --prefix=$PACKAGE_INSTALL_DIR \
        --cc=$CC \
        --host-cc=$CC \
        --extra-cflags="$CFLAGS $CPPFLAGS -DNCURSES_WIDECHAR=1" \
        --extra-ldflags="$LDFLAGS" \
        --disable-bsd-user \
        --disable-guest-agent \
        --enable-capstone \
        --enable-virtfs \
        --enable-curses \
        --enable-libssh \
        --enable-slirp \
        --enable-zstd \
        --enable-fdt=system \
        --enable-vde \
        --disable-sdl \
        --disable-gtk $CONFIGURE_EXTRA_ARGS
    gmakew install V=1
