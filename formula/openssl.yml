summary: Cryptography and SSL/TLS Toolkit
git-url: https://github.com/openssl/openssl
web-url: https://www.openssl.org/
src-url: https://www.openssl.org/source/openssl-3.1.1.tar.gz
src-sha: b3aa61334233b852b63ddb048df181177c2c659eb9d4376008118f9c08d07674
license: Apache-2.0
dep-upp: perl
bsystem: gmake
binbstd: 1
install: |
    case $TARGET_PLATFORM_NAME in
        openbsd) sed -i 's|-Wl,-z,defs||' Configurations/shared-info.pl
    esac

    if [ "$LINK_TYPE" = static-full ] || [ "$LINK_TYPE" = static-most ] ; then
        cat > proxy-ld.c <<EOF
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <unistd.h>

    int main(int argc, char* argv[]) {
        for (int i = 1; i < argc; i++) {
            if (strcmp(argv[i], "-lssl") == 0) {
                argv[i] = (char*)"./libssl.a";
            } else if (strcmp(argv[i], "-lcrypto") == 0) {
                argv[i] = (char*)"./libcrypto.a";
            } else {
                #ifndef TARGET_PLATFORM_NAME_DARWIN
                if (strcmp(argv[i], "-fPIC") == 0) {
                    argv[i] = (char*)"-static";
                }
                #endif
            }
        }

        char * LD = getenv("CC");

        if (LD == NULL || LD[0] == '\0') {
            fprintf(stderr, "CC environment variable is not set\n");
            return 1;
        }

        argv[0] = LD;

        for (int i = 0; i < argc; i++) {
            printf("%s ", argv[i]);
        }

        printf("\n");

        execv(LD, argv);

        perror(LD);

        return 127;
    }
    EOF
        if [ "$TARGET_PLATFORM_NAME" = macos ] ; then
            run $CC_FOR_BUILD $CPPFLAGS_FOR_BUILD $CFLAGS_FOR_BUILD $LDFLAGS_FOR_BUILD -std=c99 -DTARGET_PLATFORM_NAME_DARWIN -o proxy-ld proxy-ld.c
        else
            run $CC_FOR_BUILD $CPPFLAGS_FOR_BUILD $CFLAGS_FOR_BUILD $LDFLAGS_FOR_BUILD -std=c99 -UTARGET_PLATFORM_NAME_DARWIN -o proxy-ld proxy-ld.c
        fi

        run export LDCMD="$PWD/proxy-ld"
    fi

    run ./config \
        no-tests \
        no-ssl2 \
        no-ssl3 \
        no-comp \
        no-afalgeng \
        --prefix=$PACKAGE_INSTALL_DIR  \
        --libdir=$PACKAGE_INSTALL_DIR/lib \
        --openssldir=$PACKAGE_INSTALL_DIR/etc/ssl
    gmakew clean
    gmakew
    gmakew install
