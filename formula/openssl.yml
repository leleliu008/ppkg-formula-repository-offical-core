summary: Cryptography and SSL/TLS Toolkit
git-url: https://github.com/openssl/openssl
web-url: https://www.openssl.org/
src-url: https://www.openssl.org/source/openssl-3.2.1.tar.gz
src-sha: 83c7329fe52c850677d75e5d0b0ca245309b97e8ecbcfdc1dfdc4ab9fac35b39
license: Apache-2.0
dep-upp: perl
bsystem: gmake
binbstd: 1
install: |
    if [ "$LINK_TYPE" = static-full ] || [ "$LINK_TYPE" = static-most ] ; then
        cat > proxy-ld.c <<EOF
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <unistd.h>

    int main(int argc, char* argv[]) {
        for (int i = 1; i < argc; i++) {
            if (strcmp(argv[i], "-lssl") == 0) {
                argv[i] = (char*)"./libssl.a";
            } else if (strcmp(argv[i], "-lcrypto") == 0) {
                argv[i] = (char*)"./libcrypto.a";
            } else {
                #ifdef BUILD_FULLY_STATICALLY_LINKED_EXE
                if (strcmp(argv[i], "-fPIC") == 0) {
                    argv[i] = (char*)"-static";
                }
                #endif
            }
        }

        char * LD = getenv("CC");

        if (LD == NULL || LD[0] == '\0') {
            fprintf(stderr, "CC environment variable is not set\n");
            return 1;
        }

        argv[0] = LD;

        for (int i = 0; i < argc; i++) {
            printf("%s ", argv[i]);
        }

        printf("\n");

        execv(LD, argv);

        perror(LD);

        return 127;
    }
    EOF

        if [ "$TARGET_PLATFORM_NAME" = macos ] || [ "$TARGET_PLATFORM_NAME" = openbsd ] ; then
            CDEFINE=-UBUILD_FULLY_STATICALLY_LINKED_EXE
        else
            CDEFINE=-DBUILD_FULLY_STATICALLY_LINKED_EXE
        fi

        run "$CC_FOR_BUILD" "$CPPFLAGS_FOR_BUILD" "$CFLAGS_FOR_BUILD" "$LDFLAGS_FOR_BUILD" -std=c99 "$CDEFINE" -o proxy-ld proxy-ld.c

        run export LDCMD="$PWD/proxy-ld"
    fi

    # https://github.com/openssl/openssl/blob/master/INSTALL.md
    CONFIG_ARGS='no-tests no-ssl2 no-ssl3 no-comp'

    if [ "$TARGET_PLATFORM_NAME" = openbsd ] ; then
        sed -i 's|-Wl,-z,defs||' Configurations/shared-info.pl

        if [ "$CROSS_COMPILING" = 1 ] ; then
            export LDFLAGS="$LDFLAGS -fuse-ld=lld"
            CONFIG_ARGS="$CONFIG_ARGS no-devcryptoeng"
        fi
    fi

    if [ "$CROSS_COMPILING" = 1 ] ; then
        unset OS_COMPILER

        case $TARGET_PLATFORM_NAME in
            *bsd)
                case $TARGET_PLATFORM_ARCH in
                    amd64)  OS_COMPILER='BSD-x86_64' ;;
                    *)      OS_COMPILER="BSD-$TARGET_PLATFORM_ARCH"
                esac
        esac

        run perl Configure "$CONFIG_ARGS" --prefix=$PACKAGE_INSTALL_DIR --libdir=lib --openssldir=etc/ssl "$OS_COMPILER"
    else
        run perl config    "$CONFIG_ARGS" --prefix=$PACKAGE_INSTALL_DIR --libdir=lib --openssldir=etc/ssl
    fi

    run perl configdata.pm --dump

    gmakew clean
    gmakew
    gmakew install
